@model NuSurvey.Web.Controllers.QuestionViewModel

@{
    ViewBag.Title = "Create Question";
}

@section SubNav {
    <ul class="navigation">
        <li>
            <a href="/Survey/Index">Surveys</a> 
        </li>
        <li>
            <a href="/Survey/Edit/@Model.Survey.Id">Edit Survey</a> 
        </li>
        @if (Model.Category != null)
        {
            <li>
                <a href="/Category/Edit/@Model.Category.Id">Edit Category</a> 
            </li>
        }
        <li>
            Create
        </li>
    </ul>
}

@section AdditionalScripts{
    <script type="text/javascript" src='@Url.Content("~/Scripts/jquery.tablednd_0_5.js")'></script>

    <script type="text/javascript">
        $(document).ready(function () {
            // attach event handlers
            $("img#AddResponses").click(function () { AddResponseInput(); });

            // Initialise the table
            $("table.DragnDrop").tableDnD({
                onDrop: function (table, row) {
                    //debugger;
                    var rows = table.tBodies[0].rows;
                    var newOrder = "";
                    for (var i = 0; i < rows.length; i++) {
                        if (newOrder == "") {
                            newOrder = rows[i].id;
                        }
                        else {
                            newOrder = newOrder + " " + rows[i].id;
                        }
                    }
                    $("#SortOrder").val(newOrder);
                }
            });

        });

        function AddResponseInput(obj) {
            var index = $("#ResponseTable > tbody tr").length;
            $("#ResponseTable > tbody:last").append('<tr id="' + index + '"><td></td><td><input id="Response" class="text-box single-line" type="text" name="Response[' + index + '].Value"> </input></td><td><input id="Response" class="text-box single-line" type="text" name="Response[' + index + '].Score"> </input></td></tr>');

            // Initialise the table
            $("table.DragnDrop").tableDnD({
                onDrop: function (table, row) {
                    //debugger;
                    var rows = table.tBodies[0].rows;
                    var newOrder = "";
                    for (var i = 0; i < rows.length; i++) {
                        if (newOrder == "") {
                            newOrder = rows[i].id;
                        }
                        else {
                            newOrder = newOrder + " " + rows[i].id;
                        }
                    }
                    $("#SortOrder").val(newOrder);
                }
            });
        }

    </script>

}

@*<h2>Create</h2>*@

<script src="@Url.Content("~/Scripts/jquery.validate.min.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/jquery.validate.unobtrusive.min.js")" type="text/javascript"></script>

@using (Html.BeginForm())
{
	@Html.AntiForgeryToken()
	@Html.ValidationSummary(true)
    @Html.HiddenFor(x => x.Survey.Id)
    @Html.Hidden("categoryId", Model.Category != null ? Model.Category.Id : 0)
    <input id="SortOrder" type="text" value="0" name="SortOrder" style="display:none"/>    
<fieldset>
@* Legend is required if you have more than one widget/unit to help the user understand what is being asked of them.
Example: Dinosaur 1  *@
	@*<legend>QuestionViewModel</legend>*@
	@*<h4>Form Header</h4>*@
	@*<p>Be specific so the user understands what exactly you are looking for.  Example: After Dinosaur 1 moves out of his/her parents' den what will Dinosaur 1 do?  We need to know his employment plan, feeding area, as well as living situation.  This information will not be sold or given to carnivores.</p>*@
	<p>All required fields are in <strong>bold</strong> and have a red <span class="required">*</span> next to the field label.</p>
    <p>Click the plus button to add more Response Choices. Drag and Drop choices to change the order.</p>
	<ul>
        <li>
			<div class="editor-label required">
				@Html.LabelFor(model => model.Question.Category)<span>*</span> 
			</div>
			<div class="editor-field">                      
                @this.Select("Question.Category").Options(Model.Categories, x => x.Id, x => x.Name).FirstOption("--Select Category--").Selected(Model.Question.Category != null ? Model.Question.Category.Id.ToString() : Model.Category != null ? Model.Category.Id.ToString() : string.Empty)
				@*@Html.EditorFor(model => model.Question.Category)*@
				@Html.ValidationMessageFor(model => model.Question.Category)
			</div>
		</li>
		<li>
			<div class="editor-label required">
				@Html.LabelFor(model => model.Question.Name)<span>*</span> 
			</div>
			<div class="editor-field wideText">
				@Html.EditorFor(model => model.Question.Name)
				@Html.ValidationMessageFor(model => model.Question.Name)
			</div>
		</li>
		<li>
			<div class="editor-label">
				@Html.LabelFor(model => model.Question.IsActive) 
			</div>
			<div class="editor-field">
				@Html.EditorFor(model => model.Question.IsActive)
				@Html.ValidationMessageFor(model => model.Question.IsActive)
			</div>
		</li>
@*		<li>
			<div class="editor-label">
				@Html.LabelFor(model => model.Question.Order) 
			</div>
			<div class="editor-field">
				@Html.EditorFor(model => model.Question.Order)
				@Html.ValidationMessageFor(model => model.Question.Order)
			</div>
		</li>*@
		<li>
			<div class="editor-label">
				@Html.LabelFor(model => model.Question.IsOpenEnded) 
			</div>
			<div class="editor-field">
				@Html.EditorFor(model => model.Question.IsOpenEnded)
				@Html.ValidationMessageFor(model => model.Question.IsOpenEnded)
			</div>
		</li>
@*		<li>
			<div class="editor-label">
				@Html.LabelFor(model => model.Question.CreateDate) 
			</div>
			<div class="editor-field">
				@Html.EditorFor(model => model.Question.CreateDate)
				@Html.ValidationMessageFor(model => model.Question.CreateDate)
			</div>
		</li>*@
        <li>
			<div class="editor-label required">
				@Html.LabelFor(model => model.Question.Responses)<span>*</span> 
			</div>
			<div class="editor-field">
				@Html.EditorFor(model => model.Question.Responses)
				@Html.ValidationMessageFor(model => model.Question)
                <table id="ResponseTable" class="DragnDrop">
                    <thead>
                        <tr>
                            <th></th>
                            <th>Choice</th>
                            <th>Score</th>
                        </tr>
                    </thead>
                    <tbody>
                    @{var respCount = 0;}
                    @foreach (var resp in Model.Responses)
                    { 
                        <tr id="@respCount">
                            <td></td>
                            <td><input id="Response" class="text-box single-line" type="text" name="Response[@respCount].Value" value="@resp.Value"></input></td>
                            <td><input id="Response" class="text-box single-line" type="text" name="Response[@respCount].Score" value="@resp.Score"></input></td>
                        </tr>
                       respCount = respCount + 1;
                    }
                    @if (respCount == 0){                     
                        <tr id="@respCount">
                            <td></td>
                            <td><input id="Response" class="text-box single-line" type="text" name="Response[@respCount].Value"></input></td>
                            <td><input id="Response" class="text-box single-line" type="text" name="Response[@respCount].Score"></input></td>
                        </tr>
                    }
                    </tbody>
                </table>
                <img id="AddResponses" src=@Url.Content("~/Images/plus.png") style="width:24px; height:24px;" />
			</div>            
        </li>
		<li>
			@* For the clear and submit buttons an empty label is required. Example: <label>&nbsp;</label> *@
			<label>&nbsp;</label>
			<input class="button" type="submit" value="Submit" /> |
                                @if (Model.Category != null)
                                {
                                        <a href="/Category/Edit/@Model.Category.Id">Cancel</a> 
                                }
                                else
                                { 
                                    <a href="/Survey/Edit/@Model.Survey.Id">Cancel</a>
                                }
		</li>
	</ul>
	</fieldset>
}

<div>
	@Html.ActionLink("Back to List", "Index")
</div>

