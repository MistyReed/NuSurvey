@model NuSurvey.Web.Controllers.QuestionViewModel

@{
    ViewBag.Title = "Create Question";
}

@section SubNav {
    <ul class="navigation">
        <li>
            <a href="/Survey/Index">Surveys</a> 
        </li>
        <li>
            <a href="/Survey/Edit/@Model.Survey.Id">Edit Survey</a> 
        </li>
        @if (Model.Category != null){
            <li>
                <a href="/Category/Edit/@Model.Category.Id">Edit Category</a> 
            </li>
        }
        <li>
            Create
        </li>
    </ul>
}

@*<h2>Create</h2>*@

<script src="@Url.Content("~/Scripts/jquery.validate.min.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/jquery.validate.unobtrusive.min.js")" type="text/javascript"></script>

@using (Html.BeginForm())
{
	@Html.AntiForgeryToken()
	@Html.ValidationSummary(true)
<fieldset>
@* Legend is required if you have more than one widget/unit to help the user understand what is being asked of them.
Example: Dinosaur 1  *@
	@*<legend>QuestionViewModel</legend>*@
	@*<h4>Form Header</h4>*@
	@*<p>Be specific so the user understands what exactly you are looking for.  Example: After Dinosaur 1 moves out of his/her parents' den what will Dinosaur 1 do?  We need to know his employment plan, feeding area, as well as living situation.  This information will not be sold or given to carnivores.</p>*@
	<p>All required fields are in <strong>bold</strong> and have a red <span class="required">*</span> next to the field label.</p>
	<ul>
        <li>
			<div class="editor-label required">
				@Html.LabelFor(model => model.Question.Category)<span>*</span> 
			</div>
			<div class="editor-field">
                @this.Select("Question.Category").Options(Model.Categories, x => x.id, x.Name).FirstOption("--Select Category--").Selected(Model.Question.Category != null ? Model.Question.Category.Id.ToString() : string.Empty)
				@*@Html.EditorFor(model => model.Question.Category)*@
				@Html.ValidationMessageFor(model => model.Question.Category)
			</div>
		</li>
		<li>
			<div class="editor-label required">
				@Html.LabelFor(model => model.Question.Name)<span>*</span> 
			</div>
			<div class="editor-field wideText">
				@Html.EditorFor(model => model.Question.Name)
				@Html.ValidationMessageFor(model => model.Question.Name)
			</div>
		</li>
		<li>
			<div class="editor-label">
				@Html.LabelFor(model => model.Question.IsActive) 
			</div>
			<div class="editor-field">
				@Html.EditorFor(model => model.Question.IsActive)
				@Html.ValidationMessageFor(model => model.Question.IsActive)
			</div>
		</li>
@*		<li>
			<div class="editor-label">
				@Html.LabelFor(model => model.Question.Order) 
			</div>
			<div class="editor-field">
				@Html.EditorFor(model => model.Question.Order)
				@Html.ValidationMessageFor(model => model.Question.Order)
			</div>
		</li>*@
		<li>
			<div class="editor-label">
				@Html.LabelFor(model => model.Question.IsOpenEnded) 
			</div>
			<div class="editor-field">
				@Html.EditorFor(model => model.Question.IsOpenEnded)
				@Html.ValidationMessageFor(model => model.Question.IsOpenEnded)
			</div>
		</li>
@*		<li>
			<div class="editor-label">
				@Html.LabelFor(model => model.Question.CreateDate) 
			</div>
			<div class="editor-field">
				@Html.EditorFor(model => model.Question.CreateDate)
				@Html.ValidationMessageFor(model => model.Question.CreateDate)
			</div>
		</li>*@
		<li>
			@* For the clear and submit buttons an empty label is required. Example: <label>&nbsp;</label> *@
			<label>&nbsp;</label>
			<input class="button" type="submit" value="Submit" /> | @Html.ActionLink("Cancel", "Index")
		</li>
	</ul>
	</fieldset>
}

<div>
	@Html.ActionLink("Back to List", "Index")
</div>

