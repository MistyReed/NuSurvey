@model NuSurvey.Web.Models.OpenRegisterModel
@using NuSurvey.Core.Resources
@using NuSurvey.Web.Controllers.Filters
@{
	ViewBag.Title = "Register";
}


@section AdditionalScripts{

    <script type="text/javascript">
        $(document).ready(function () {
            $("#Email").blur(function(event){
                if($(this).hasClass("warning")){
                    $(this).removeClass("warning");
                    $(".field-warning").hide();
                }
                if($(this).hasClass("input-validation-error")){
                    //Do nothing
                }
                else{
                    var emailVal = $(this).val().toLowerCase();                                   
                    if(emailVal != null && emailVal != "" && emailVal.match(@StaticValues.EmailWarningRegEx) == null){
                        $(this).addClass("warning");
                        $(this).next().text("This may be invalid");   
                        $(".field-warning").show();                     
                    }
                }
                 
            });

            $("#openRegister").submit(function() {
                if(!confirm("You are requesting permission to download the Healthy Kids pediatric obesity risk assessment form to your computer. Healthy Kids© is protected by copyright laws and is property of University of California. By downloading Healthy Kids, you agree to keep the original form unchanged. This means that you are not entitled to modify or use the photographs for any other purpose. In addition, all references and logos may not be altered in any way nor removed. ")) {
                    return false;
                }
            });
        });
    </script>    
}


<script src="@Url.Content("~/Scripts/jquery.validate.min.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/jquery.validate.unobtrusive.min.js")" type="text/javascript"></script>

@using (Html.BeginForm(null, null, FormMethod.Post, new{id = "openRegister"}))
{
	@Html.AntiForgeryToken()
	@Html.ValidationSummary(true)

    <fieldset>
        @{var isChecked = "";}
        <p>All required fields are in <strong>bold</strong> and have a red <span class="required">*</span> next to the field label.</p>

        <p><strong>Note!</strong> To answer surveys anonymously,  you don't have to register. Just click the image on the home page to answer surveys for Parents.</p>
        <ul>
            <li>
                <div class="editor-label required">
                    @Html.LabelFor(model => model.Email)<span>*</span> 
                </div>
                <div class="editor-field wideText">
                    @Html.EditorFor(model => model.Email)
                    <span class="field-warning"></span>
                    @Html.ValidationMessageFor(model => model.Email)
                </div>
            </li>
            <li>
                <div class="editor-label required">
                    @Html.LabelFor(model => model.User.FirstName)<span>*</span>
                </div>
                <div class="editor-field wideText">
                    @Html.EditorFor(model => model.User.FirstName)
                    <span class="field-warning"></span>
                    @Html.ValidationMessageFor(model => model.User.FirstName)
                </div>
            </li>
            <li>
                <div class="editor-label required">
                    @Html.LabelFor(model => model.User.LastName)<span>*</span>
                </div>
                <div class="editor-field wideText">
                    @Html.EditorFor(model => model.User.LastName)
                    <span class="field-warning"></span>
                    @Html.ValidationMessageFor(model => model.User.LastName)
                </div>
            </li>
            <li>
                <div class="editor-label">
                    @Html.LabelFor(model => model.User.Title)
                </div>
                <div class="editor-field wideText">
                    @Html.EditorFor(model => model.User.Title)
                    <span class="field-warning"></span>
                    @Html.ValidationMessageFor(model => model.User.Title)
                </div>
            </li>
            <li>
                <div class="editor-label">
                    @Html.LabelFor(model => model.User.Agency)
                </div>
                <div class="editor-field wideText">
                    @Html.EditorFor(model => model.User.Agency)
                    <span class="field-warning"></span>
                    @Html.ValidationMessageFor(model => model.User.Agency)
                </div>
            </li>
            <li>
                <div class="editor-label required">
                    @Html.LabelFor(model => model.User.City)<span>*</span>
                </div>
                <div class="editor-field wideText">
                    @Html.EditorFor(model => model.User.City)
                    <span class="field-warning"></span>
                    @Html.ValidationMessageFor(model => model.User.City)
                </div>
            </li>
            <li>
                <div class="editor-label required">
                    @Html.LabelFor(model => model.User.State)<span>*</span>
                </div>
                <div class="editor-field wideText">
                    @Html.EditorFor(model => model.User.State)
                    <span class="field-warning"></span>
                    @Html.ValidationMessageFor(model => model.User.State)
                </div>
            </li>
            <li>
                <div class="editor-label">
                    @Html.Label("Roles")
                </div>
                <div class="editor-field">
                    <ul class="checkbox_container">
                        <li>
                            @{
                                isChecked = Model.Roles != null && Model.Roles.Contains(RoleNames.User) ? "checked=\"checked\"" : "";
                            }
                            <input class="checkbox" type="checkbox" value="@ViewBag.UserRole" @isChecked name="Roles" /> Educator
                        </li>
                        <li>
                            @{
                                isChecked = Model.Roles != null && Model.Roles.Contains(RoleNames.ProgramDirector) ? "checked=\"checked\"" : "";
                            }                            
                            <input class="checkbox" type="checkbox" value="@ViewBag.ProgramDirectorRole" @isChecked name="Roles" /> Program Director
                        </li>
                    </ul>
                </div>
            </li>
            <li>
                <div class="editor-label required">
                    
                    @Html.Label("Permissions for use")<span>*</span> @Html.ActionLink("May be found here", "TermsAndConditions")
                </div>
                <div class="editor-field">
                    <ul class="checkbox_container">
                        <li>
                            @{
                                isChecked = Model.Agree == "agreed" ? "checked=\"checked\"" : "";
                            } 
                            <input class="checkbox" type="checkbox" value="agreed" @isChecked name="Agree" /> I Agree
                            @Html.ValidationMessage("Agree")
                        </li>
                    </ul>
                </div>
            </li>
        
            <li>
                <div class="editor-field">        
                    @Html.GenerateCaptcha()
                    @Html.ValidationMessage("Captcha")
                </div>
            </li>        

            <li>
                @* For the clear and submit buttons an empty label is required. Example: <label>&nbsp;</label> *@
                <label>&nbsp;</label>
                <input class="button submit" type="submit" value="Create" onclick='return jQuery.confirm("Do you agree to all the terms and conditions?"); return false;'/> | @Html.ActionLink("Cancel", "Index", "Home")
            </li>
        </ul>
    </fieldset>
}


